package com.hpe.calEStore.dao.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PurchaseOrder generated by hbm2java
 */
@Entity
@Table(name = "PURCHASE_ORDER", catalog = "eshop")
public class PurchaseOrder implements java.io.Serializable {

	private Integer orderId;
	private Address address;
	private Status status;
	private UserProfile userProfile;
	private Date orderDate;
	private Set<OrderStatus> orderStatuses = new HashSet<OrderStatus>(0);
	private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);

	public PurchaseOrder() {
		// Do nothing... Hibernate needs this mandatory
	}

	public PurchaseOrder(Address address, Status status,
			UserProfile userProfile, Date orderDate) {
		this.address = address;
		this.status = status;
		this.userProfile = userProfile;
		this.orderDate = orderDate;
	}

	public PurchaseOrder(Address address, Status status,
			UserProfile userProfile, Date orderDate,
			Set<OrderStatus> orderStatuses, Set<ProductOrder> productOrders) {
		this.address = address;
		this.status = status;
		this.userProfile = userProfile;
		this.orderDate = orderDate;
		this.orderStatuses = orderStatuses;
		this.productOrders = productOrders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ORDER_ID", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ADDRESS_ID", nullable = false)
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATUS_ID", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID", nullable = false)
	public UserProfile getUserProfile() {
		return this.userProfile;
	}

	public void setUserProfile(UserProfile userProfile) {
		this.userProfile = userProfile;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ORDER_DATE", nullable = false, length = 19)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrder")
	public Set<OrderStatus> getOrderStatuses() {
		return this.orderStatuses;
	}

	public void setOrderStatuses(Set<OrderStatus> orderStatuses) {
		this.orderStatuses = orderStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "purchaseOrder")
	public Set<ProductOrder> getProductOrders() {
		return this.productOrders;
	}

	public void setProductOrders(Set<ProductOrder> productOrders) {
		this.productOrders = productOrders;
	}

}
