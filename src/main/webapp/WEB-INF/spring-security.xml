<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">



	<security:http auto-config="true">


		<!-- a clean session will be created without any of the attributes from 
			the old session being copied over -->
		<security:session-management
			session-fixation-protection="newSession" />


		<!-- only the admin can access the page. -->
		<security:intercept-url pattern="/forms/welcome**"
			access="hasRole('ROLE_ADMIN')" />

		<security:form-login login-processing-url="/performLogin"
			default-target-url="/forms/welcome" authentication-failure-url="/login?error"
			username-parameter="username" password-parameter="password" />

		<!-- Cross site request forgery protection enabled. -->
		<security:csrf />

		<!-- Logout url -->
		<security:logout logout-success-url="/logout?successful"
			delete-cookies="JSESSIONID" />

		<!-- Remember me token -->
		<!-- <security:remember-me key="rememberSecure"/> -->

		<!-- invalid user access -->
		<security:access-denied-handler
			error-page="/forms/accessDenied" />
	</security:http>



	<!-- Authenticate with stored credentials in DB -->

	<!-- <security:authentication-manager> -->
	<!-- <security:authentication-provider> -->
	<!-- <security:password-encoder hash="sha-256"/> -->
	<!-- <security:jdbc-user-service data-source-ref="dataSource" -->
	<!-- users-by-username-query= -->
	<!-- "select username,password, enabled from users_credentials where username=?" -->
	<!-- authorities-by-username-query= -->
	<!-- "select username, role from user_roles where username =? " /> -->
	<!-- </security:authentication-provider> -->
	<!-- </security:authentication-manager> -->


	<!-- password encoder bean -->

	<!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"> -->
	<!-- <constructor-arg name="strength" value="10" /> -->
	<!-- </bean> -->



	<!-- ~ NOT BEING USED NOW ~ BUT WORKS FINE ~ XML AUTHENTICATION ~ -->
	<!-- <security:authentication-manager> -->
	<!-- <security:authentication-provider> -->
	<!-- <security:user-service> -->
	<!-- <security:user name="me" password="me" authorities="ROLE_ANY_USER"/> -->
	<!-- </security:user-service> -->
	<!-- </security:authentication-provider> -->
	<!-- </security:authentication-manager> -->







</beans>