<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- Spring Security Configuration -->
	<import resource="spring-security.xml" />

	<!-- Spring e-Mail Configuration -->
	<import resource="spring-mail.xml" />

	<!-- Enable annotation driven controllers, validation etc... -->
	<mvc:annotation-driven />

	<context:component-scan base-package="com.hpe.calEStore" />

	<context:property-placeholder location="classpath:calEStore.properties" />
	<context:property-placeholder location="classpath:swagger.properties" />

	<context:annotation-config />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages" />
	</bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/"
		cache-period="31556926" />

	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />

	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>

	<!-- <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" 
		p:definitions="/WEB-INF/tiles-defs.xml" /> -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles-defs.xml</value>
			</list>
		</property>
	</bean>


	<bean id="dataSource" class="com.hpe.calEStore.util.CustomDataSourceForMySQL"
		destroy-method="close">
		<property name="driverClassName">
			<value>${db.driverClassName}</value>
		</property>
		<property name="url">
			<value>${db.url}</value>
		</property>
		<property name="username">
			<value>${db.username}</value>
		</property>
		<property name="password">
			<value>${db.password}</value>
		</property>
	</bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.hpe.calEStore.dao.entity.UserProfile</value>
				<value>com.hpe.calEStore.dao.entity.Address</value>
				<value>com.hpe.calEStore.dao.entity.Department</value>
				<value>com.hpe.calEStore.dao.entity.PurchaseOrder</value>
				<value>com.hpe.calEStore.dao.entity.Status</value>
				<value>com.hpe.calEStore.dao.entity.OrderStatus</value>
				<value>com.hpe.calEStore.dao.entity.ProductOrder</value>
				<value>com.hpe.calEStore.dao.entity.Product</value>
				<value>com.hpe.calEStore.dao.entity.Brand</value>
				<value>com.hpe.calEStore.dao.entity.Category</value>
				<value>com.hpe.calEStore.dao.entity.Product</value>
				<value>com.hpe.calEStore.dao.entity.ProductAspect</value>
				<value>com.hpe.calEStore.dao.entity.Aspect</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</bean>

</beans>
